//PC7 AS INPUT
//PD8 AS OUTPUT

#define GPIOC_BASE       (0x50000800UL)
#define GPIOD_BASE       (0x50000C00UL)
#define RCC_BASE         (0x40021000UL)

#define RCC_IOPENER_OFFSET (0x34UL)
#define RCC_IOPENR       (*(volatile unsigned int*)(RCC_BASE + RCC_IOPENER_OFFSET))

#define GPIOC_MODER_OFFSET (0x00UL)
#define GPIOC_MODER      (*(volatile unsigned int*)(GPIOC_BASE + GPIOC_MODER_OFFSET))

#define GPIOC_IDR_OFFSET   (0x10UL)
#define GPIOC_IDR        (*(volatile unsigned int*)(GPIOC_BASE + GPIOC_IDR_OFFSET))

#define GPIOC_PUPDR_OFFSET (0x0CUL)
#define GPIOC_PUPDR      (*(volatile unsigned int*)(GPIOC_BASE + GPIOC_PUPDR_OFFSET))

#define GPIOD_MODER_OFFSET (0x00UL)
#define GPIOD_MODER      (*(volatile unsigned int*)(GPIOD_BASE + GPIOD_MODER_OFFSET))

#define GPIOD_ODR_OFFSET  (0x14UL)
#define GPIOD_ODR        (*(volatile unsigned int*)(GPIOD_BASE + GPIOD_ODR_OFFSET))

void delay(volatile unsigned int time)
{
    while(time--) {
        for (volatile int i = 0; i < 1000; i++);
    }
}

int main(void)
{
    RCC_IOPENR |= (1 << 2);  
    RCC_IOPENR |= (1 << 3);  

   
    GPIOC_MODER &= ~(3 << 14);

   
    GPIOC_PUPDR &= ~(3 << 14);  // Clear
    GPIOC_PUPDR |=  (2 << 14);  // Set pull-down

    
    GPIOD_MODER &= ~(3 << 16);
    GPIOD_MODER |=  (1 << 16);

    while (1)
    {
        if (GPIOC_IDR & (1 << 7)) {
            GPIOD_ODR ^= (1 << 8);
            delay(1000);
        } else {
            GPIOD_ODR &= ~(1 << 8);  // Turn off LED
        }
    }

    return 0;
}
